以下のコード「Money.java」を読みやすいように改行してください。

ありがとうございます。「Money.java」をPythonに書き直してください。テストはpytestを使用してください。
==========
0727 第1章
間違ったgit commit（コミットメッセージ）を修正したい https://qiita.com/ymp-a/items/0ed00353cdd5ca9e133c #Qiita @syamashita20より

git amendするときにvimで編集すると`#`がコメントアウト扱いされてしまう問題
`git commit --amend -m "#10 課題2 マジックナンバーを修正"`

==========
#15 第1章 p.30までの仮実装Dollar.py、test_money.py、TODO.md作成
git commit --amend -m "#15 第1章 p.30までの仮実装Dollar.py、test_money.py、TODO.md作成"
============

これJava入門とテスト入門するべき？
Pythonのクラスと変数
ファクトリーパターン
コンピュータはなぜ動くのか
プログラムはなぜ動くのか
==========

$ git commit -m "#15 第1章 p.33までの仮実装 依存性と重複"

$ git commit -m "#15 第1章 p.37まで完了 ベタ書きから変数へ"
============
0803 第2章～第6章
$ git commit -m "#16 第2章 p.44まで完了 副作用解消"

$ git commit -m "#16 第2章 実行時にテストの結果を出力できるようにした"

$ git commit -m "#16 第2章 p.44まで完了 ログ削除"

ChatGPTに翻訳させる
ログのライブラリ　ログレベル　デバッグの時だけ用意されるログ

$ git commit -m "#17 第3章 p.50まで 等価性の比較"

$ git commit -m "#17 第3章 p.53まで完了 2つのDollarについて等価性の比較"

$ git commit -m "#17 第4章 p.53まで アサーションの修正により、Dollar同士を直接比較"

$ git commit --amend -m "#17 第4章 p.55まで アサーションの修正により、Dollar同士を直接比較"

一時 変数 product は 用 を なさ なく なっ た ので、 インライン 化

$ git commit -m "#17 第4章 p.56まで 一時変数productをインライン化"

```
★★後回し★★
# 4章は#17ではなく#24
9375687 (HEAD -> catcoswavist) #17 第4章 p.56まで 一時変数productをインライン化     
8ee63e7 #17 第4章 p.55まで アサーションの修正により、Dollar同士を直接比較
★★★★★★★
```

git commit -m "#24 第4章 p.60まで完了 amountフィールドをprivateに変更(要質問:デコレータ@propertyとは？)"

git commit -m "#25 第5章 p.68まで完了 Dollarクラスのコピペにより、Francクラスを作成"

git commit -m "#26 第6章 p.73まで サブクラスから見るため、一時変数amountをprotectedに変更 "

git commit -m "#26 第6章 p.73まで Dollar.pyでの型宣言をDollarクラスからMoneyクラスに変更 "

git commit -m "#26 第6章 p.74まで Dollar.pyでの一時変数をDollarクラスからMoneyクラスに変更 "


git commit -m "#26 第6章 p.75まで equalsメソッドをDollarクラスからMoneyクラスに引き上げ"

git commit -m "#26 第6章 p.77まで Francの等価テストを追加"

git commit -m "#26 第6章 p.78まで Franc.pyについても、型宣言と一時変数をDollarクラスからMoneyクラスに変更"

git commit -m "#26 第6章 p.78まで Franc.pyについても、型宣言と一時変数をDollarクラスからMoneyクラスに変更"

git commit -m "#26 第6章 p.83まで完了 Franc.pyのequalメソッドもMoneyクラスに移行"

===============
0824 第7章
ドルとフランの比較
つまり、ドルとフランが等しい。
等価性比較を行うには、DollarとFrancを比較してい ないか調べる必要がある。
現時点で簡単にチェックを行いたいのであれば、
2つのオブジェクトのクラスを調べて、2つの Money オブジェクトの金額と実クラスが共に等しいときのみ等価であると判定するようにすればよい。

git commit -m "#27 第7章 p.91まで完了 "Moneyオブジェクトの比較時に実クラスも判定、ドルとフランを区別"
↑"が混じっていてcommitできない
git commit -m "#27 第7章 p.91まで完了 Moneyオブジェクトの比較時に実クラスも判定、ドルとフランを区別"


# UTcode　ユニットテストコードのこと

# print()を消す
# private __を_に
全てを理解しようとしないほうが頭が混乱しなくていい
コードカバレッジを解析 
jacoco
コードスメルを防ぐ
ソナーキュープ
コードアナリシス SQLインジェクションの検出など
単体テストの使い方 書籍 400ページある
*****************************
0908 第8章
git commit -m "private変数__amountについて、アンダースコアを1つにして_amountに変更"

git commit -m "#28 第8章 p.93まで Franc.pyとDollar.pyについても、2つともMoneyクラスを返すよう変更→Pythonでは該当する変化なし？"
→いらない？

git commit -m "#28 第8章 p.94まで test_money.pyについて、Dollarメソッドを返すFactory"

★git commit -m "#28 第8章 p.105まで完了 "
★print()を消す